html{
	font-size:16px;
	font-family: "Helvetica", 'Helvetica Neue', Arial, sans-serif;
	background-color:white;
    color: black;
}

body{
	padding:0;
	border:0;
	margin:0;
}

body, html {
	/*height 100% necessary so parallax class can use height 100%*/
    height: 100%;
}

button{
	outline: none;
	cursor: pointer;
	border:none;
}

#app{
	/*height 100% necessary so parallax class can use height 100%*/
	height:100%;
}

#wel-user-switch{
	/*height 100% necessary so parallax class can use height 100%*/
	height:100%;
}

.pax{
	/* The image used */
    background-image: url('https://jonathonn.herokuapp.com/assets/images/002.jpg');
    background-color: white;
    z-index:0;
    /* Full height */
    height: 100%; 

    /* Create the parallax scrolling effect
    https://www.w3schools.com/howto/howto_css_parallax.asp */
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;

    /*so children divs may be positioned absolutely*/
    position: relative;
}

.capitalize{
	text-transform: capitalize;
}

.hidden{
	display:none;
}

/*https://www.w3schools.com/Css/css_dropdowns.asp
https://www.w3schools.com/Css/tryit.asp?filename=trycss_dropdown_text*/
.dropdown{
	cursor: pointer;
}

.dropdown:hover{
	/*	only want the dropdown trigger to be position relative on hover, so then this trigger element does not cover up adjacent elements' box shadows.*/
	position:relative;
}

.dropdown-content{
	/*content hidden by default*/
	/*display: none;*/
	/*except if want the dropdown-content to appear gradually, must make it always be display block instead*/
	display:block;
	position: absolute;
	/*left 0 so left side of dropdown-content aligns with left side of dropdown*/
	left: 0;
	top: 1.2rem;
	opacity:0;
	z-index:1;
	-webkit-transition: all 0.5s ease 0s;
	-moz-transition: all 0.5s ease 0s;
	transition: all 0.5s ease 0s;
}

.dropdown:hover .dropdown-content{
/*	display: block;
*/	opacity: 0.8;
	/*top:30px because dropdown is 30px height*/
	/*top:30px;*/
}

.dropdown:hover a{
	display:inline-block;
}

.dropdown-content a{
	/*since dropdown-content is always display block to enable the transition, must make the a elements within only display inline-block upon dropdown hover*/
	display: none;
	cursor: pointer;
	text-decoration: none;
	border-radius:0;
	width:150px;
	padding: 5px 8px;
	color: rgb(35, 35, 35);
	background-color: rgba(235, 235, 235, 0.9);
	-webkit-transition: all 0.5s ease 0s;
	-moz-transition: all 0.5s ease 0s;
	transition: all 0.5s ease 0s;
}

.dropdown-content a:last-child{
	/*border-radius: 0 0 35% 35%;*/
}

.dropdown-content a:hover{
	color:rgb(235, 235, 235);
	background-color:rgb(15, 15, 15);
}

/* The Close Button */
.closeSpan {
	position: absolute;
    color: white;
    font-size: 28px;
    font-weight: bold;
    width: 30px;
    height: 30px;
    line-height: 30px;
    right: -17px;
    top: -17px;
    text-align: center;
    border: 2px solid white;
    border-radius: 17px;
    box-shadow: 0px 0px 7px 3px rgba(73, 62, 71, 0.65);
    background-color: rgba(79, 0, 79, 0.7);
    -webkit-transition: all 0.2s ease 0s; /* For Safari 3.1 to 6.0 */
	-moz-transition: all 0.2s ease 0s;
	transition: all 0.2s ease 0s;
}

.closeSpan:hover,
.closeSpan:focus {
    color: rgb(79, 0, 79);
    background-color: rgb(255, 255, 255);
    border-color: rgb(79, 0, 79);
    box-shadow: 0px 0px 7px 5px rgba(73, 62, 71, 0.65);
    text-decoration: none;
    cursor: pointer;
}

.closeSpan:active{
	background-color: rgba(79, 0, 79, 0.5);
}

/*@media screen and (max-width:480px) and (orientation:landscape OR portrait){
}*/

@media screen and (max-width:480px){
	html {
		font-size:10px;
		color: rgb(35, 25, 35);
	}
}